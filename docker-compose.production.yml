version: '3.8'

services:
  server:
    image: nginx:alpine
    container_name: server
    restart: always
    tty: true
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - database
      - post-service
      - chat-service
      - auth-service
    volumes:
      - ./post-service:/var/www/post-service
      - ./.docker/nginx/conf/production:/etc/nginx/conf.d
      - ./.docker/nginx/log:/var/log/nginx
      - ./.docker/nginx/certbot/conf:/etc/letsencrypt
      - ./.docker/nginx/certbot/www:/var/www/certbot
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '0.05'
          memory: 51M

  auth-service:
    build:
      context: ./auth-service
      dockerfile: production.Dockerfile
    container_name: auth-service
    restart: always
    tty: true
    env_file:
      - ./auth-service/.env
    ports:
      - "3001:3001"
    volumes:
      - ./auth-service:/usr/src/app/syntax-squad/auth-service
      - ./auth-service/package.json:/usr/src/app/syntax-squad/auth-service/package.json
      - ./auth-service/package-lock.json:/usr/src/app/syntax-squad/auth-service/package-lock.json
      - /usr/src/app/syntax-squad/auth-service/node_modules
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '0.05'
          memory: 51M

  chat-service:
    build:
      context: ./chat-service
      dockerfile: production.Dockerfile
    container_name: chat-service
    restart: always
    tty: true
    env_file:
      - ./chat-service/.env
    ports:
      - "3002:3002"
    volumes:
      - ./chat-service:/usr/src/app/syntax-squad/chat-service
      - ./chat-service/package.json:/usr/src/app/syntax-squad/chat-service/package.json
      - ./chat-service/package-lock.json:/usr/src/app/syntax-squad/chat-service/package-lock.json
      - /usr/src/app/syntax-squad/chat-service/node_modules
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '0.13'
          memory: 133M

  post-service:
    build:
      context: ./post-service
      dockerfile: Dockerfile
    container_name: post-service
    restart: always
    tty: true
    env_file:
      - ./post-service/.env
    ports:
      - "9000:9000"
    volumes:
      - ./post-service:/var/www/post-service
      - ./.docker/php/local.ini:/usr/local/etc/php/local.ini
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '0.22'
          memory: 225M

  database:
    image: mysql:8
    container_name: database
    restart: always
    tty: true
    ports:
      - "5506:3306"
    env_file:
      - ./.env.database
    volumes:
      - database-data:/var/lib/mysql/
      - .docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '0.55'
          memory: 563M
    command: --pid-file=/var/lib/mysql/mysql.pid

networks:
  app-network:
    driver: bridge

volumes:
  database-data: