version: '3.8'

services:
  server:
    image: nginx:alpine
    container_name: server
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - certbot
      - database
      - post-service
      - chat-service
      - auth-service
    volumes:
      - ./post-service:/var/www/post-service
      - ./.docker/nginx/conf/production:/etc/nginx/conf.d
      - ./.docker/nginx/log:/var/log/nginx
      - ./.docker/nginx/certbot/conf:/etc/letsencrypt
      - ./.docker/nginx/certbot/www:/var/www/certbot
    networks:
      - app-network

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./.docker/nginx/certbot/conf:/etc/letsencrypt
      - ./.docker/nginx/certbot/www:/var/www/certbot
    entrypoint: /bin/sh -c 'trap exit TERM; while :; do certbot renew --webroot -w /var/www/certbot --quiet --deploy-hook "docker exec server -s reload"; sleep 12h & wait $${!}; done;'

  auth-service:
    build:
      context: ./auth-service
      dockerfile: prod.Dockerfile
    container_name: auth-service
    env_file:
      - ./auth-service/.env
    ports:
      - "3001:3001"
    volumes:
      - ./auth-service:/usr/src/app/syntax-squad/auth-service
      - ./auth-service/package.json:/usr/src/app/syntax-squad/auth-service/package.json
      - ./auth-service/package-lock.json:/usr/src/app/syntax-squad/auth-service/package-lock.json
      - ./auth-service/node_modules:/opt/app/node_modules
    networks:
      - app-network

  chat-service:
    build:
      context: ./chat-service
      dockerfile: prod.Dockerfile
    container_name: chat-service
    env_file:
      - ./chat-service/.env
    ports:
      - "3002:3002"
    volumes:
      - ./chat-service:/usr/src/app/syntax-squad/chat-service
      - ./chat-service/package.json:/usr/src/app/syntax-squad/chat-service/package.json
      - ./chat-service/package-lock.json:/usr/src/app/syntax-squad/chat-service/package-lock.json
      - ./chat-service/node_modules:/opt/app/node_modules
    networks:
      - app-network

  post-service:
    build:
      context: ./post-service
      dockerfile: prod.Dockerfile
    container_name: post-service
    restart: unless-stopped
    tty: true
    env_file:
      - ./post-service/.env
    ports:
      - "9000:9000"
    volumes:
      - ./post-service:/var/www/post-service
      - ./.docker/php/local.ini:/usr/local/etc/php/local.ini
    networks:
      - app-network

  database:
    image: mysql:8
    container_name: database
    restart: unless-stopped
    tty: true
    ports:
      - "5506:3306"
    env_file:
      - ./.env.database
    volumes:
      - database-data:/var/lib/mysql/
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  database-data: